---
author: "Keith Galli"
title: "Movie Data Analysis"
format:
    pdf: default
echo: false
styles: styles.css
toc: true
---

## Overview

```{python}
import pandas as pd
import matplotlib.pyplot as plt
from helpers import plot_release_year_distribution, create_keyword_wordcloud, create_genre_distribution

df = pd.read_csv("./data/TMDB-Small.csv")

#df

#df.head()
```
{{< pagebreak >}}

## Distribution by year
```{python}
#| fig-cap: "Movie Release Year Distribution"
#| fig-align: "center"
plot_release_year_distribution(df)
```

:::: {layout="[0.33, 0.66]"}

::: {#first-column}
Here is some text in the first column
:::

::: {#second-column .flushright data-latex=""}
Here is some text in the second column
:::

::::

::: {.content-visible when-format="html"}

## Plotly Scatter Plot

```{python}
import plotly.express as px

df['primary_genre'] = df['genres'].str.split(',').str[0].str.strip()

fig = px.scatter(df, x='vote_count', y='vote_average', hover_data=['title'], color='primary_genre', title='Vote Count vs Vote Average')
fig.show()
```

:::

## Word Cloud

```{python}
create_keyword_wordcloud(df)
```

{{< pagebreak >}}

## Genre Distribution

```{python}
#| fig-width: 1
create_genre_distribution(df)
```

{{< pagebreak >}}

## Random Movie

```{python}
# Random Movie
movie = df.sample(1)

url = f"https://image.tmdb.org/t/p/w600_and_h900_bestv2{movie['poster_path'].values[0]}"
```

**Title**: `{python} movie['title'].values[0]`

![](`{python} url`){width=25%}

**Description**: `{python} movie['overview'].values[0]`